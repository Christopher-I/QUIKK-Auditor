{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chris/Documents/BlockchainProjects/hackathon/auditorFrontEnd/pages/components/Sections/landingPageSection1.js\";\nimport React from 'react';\nimport { Button, Segment, Form, TextArea, Progress } from 'semantic-ui-react';\n\nvar landingPageSection1 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(landingPageSection1, _React$Component);\n\n  function landingPageSection1(props) {\n    var _this;\n\n    _classCallCheck(this, landingPageSection1);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(landingPageSection1).call(this, props));\n    _this.state = {\n      contractCode: '',\n      percent: ''\n    };\n    _this.handleChangesToContract = _this.handleChangesToContract.bind(_assertThisInitialized(_this));\n    return _this;\n  } //when smart contract code changes update the state of the parent\n\n\n  _createClass(landingPageSection1, [{\n    key: \"handleChangesToContract\",\n    value: function handleChangesToContract(event) {\n      this.props.storeContractCodeToState(event.target.value);\n      this.setState({\n        contract: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Segment, {\n        style: {\n          height: '850px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \" QUIKK Smart Contract Auditor\"), React.createElement(\"p\", {\n        style: {\n          color: 'grey'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \" light, open-source smart contract auditor for ethereum\"), React.createElement(Progress, {\n        percent: this.state.percent,\n        autoSuccess: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(TextArea, {\n        value: this.state.contract,\n        onChange: this.handleChangesToContract,\n        style: {\n          height: '700px'\n        },\n        placeholder: \"Paste your smart contract code here...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return landingPageSection1;\n}(React.Component);\n\nexport default landingPageSection1;","map":{"version":3,"sources":["/Users/chris/Documents/BlockchainProjects/hackathon/auditorFrontEnd/pages/components/Sections/landingPageSection1.js"],"names":["React","Button","Segment","Form","TextArea","Progress","landingPageSection1","props","state","contractCode","percent","handleChangesToContract","bind","event","storeContractCodeToState","target","value","setState","contract","height","color","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA+BC,QAA/B,EAAyCC,QAAzC,QAAwD,mBAAxD;;IAGMC,mB;;;;;AAEN,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6FAAMA,KAAN;AACH,UAAKC,KAAL,GAAa;AACZC,MAAAA,YAAY,EAAC,EADD;AAEZC,MAAAA,OAAO,EAAC;AAFI,KAAb;AAKA,UAAKC,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BC,IAA7B,+BAA/B;AAPkB;AAQlB,G,CAGD;;;;;4CACyBC,K,EAAM;AAE7B,WAAKN,KAAL,CAAWO,wBAAX,CAAoCD,KAAK,CAACE,MAAN,CAAaC,KAAjD;AACA,WAAKC,QAAL,CAAc;AACbC,QAAAA,QAAQ,EAACL,KAAK,CAACE,MAAN,CAAaC;AADT,OAAd;AAGA;;;6BAIO;AACR,aACC,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAI;AAACG,UAAAA,MAAM,EAAC;AAAR,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADD,EAEE;AAAG,QAAA,KAAK,EAAG;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAFF,EAGE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWE,OAA9B;AAAuC,QAAA,WAAW,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAG,KAAKF,KAAL,CAAWU,QAA7B;AAAuC,QAAA,QAAQ,EAAE,KAAKP,uBAAtD;AAA+E,QAAA,KAAK,EAAG;AAACQ,UAAAA,MAAM,EAAC;AAAR,SAAvF;AAAyG,QAAA,WAAW,EAAC,wCAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAJF,CADD;AAUC;;;;EAnCgCnB,KAAK,CAACqB,S;;AAsCxC,eAAef,mBAAf","sourcesContent":["import React from 'react';\nimport { Button,Segment, Form, TextArea, Progress} from 'semantic-ui-react';\n\n\nclass landingPageSection1 extends React.Component{\n\nconstructor(props) {\n    super(props);\n\tthis.state = {\n\t\tcontractCode:'',\n\t\tpercent:''\n\t}\n\n\tthis.handleChangesToContract = this.handleChangesToContract.bind(this);\n}\n\n\n//when smart contract code changes update the state of the parent\n\thandleChangesToContract(event){\n\n\t\tthis.props.storeContractCodeToState(event.target.value);\n\t\tthis.setState({\n\t\t\tcontract:event.target.value\n\t\t});\n\t}\n\n\n\n\trender(){\n\treturn (\n\t\t<Segment style = {{height:'850px'}}>\n\t\t\t<h1> QUIKK Smart Contract Auditor</h1> \n\t\t\t <p style ={{color:'grey'}}> light, open-source smart contract auditor for ethereum</p>\n\t\t\t <Progress percent={this.state.percent} autoSuccess />\n\t\t\t <Form >\n\t\t\t <TextArea value= {this.state.contract} onChange={this.handleChangesToContract} style ={{height:'700px'}} placeholder=\"Paste your smart contract code here...\"/>\n\t\t\t </Form>\n\t\t </Segment>\n\t\t)\n\t}\n}\n\nexport default landingPageSection1;"]},"metadata":{},"sourceType":"module"}