{"ast":null,"code":"export default (function () {\n  return \" Hello hi\" //   contract Migrations {\n  //   address public owner;\n  //   uint public last_completed_migration;\n  //   constructor() public {\n  //     owner = msg.sender;\n  //   }\n  //   modifier restricted() {\n  //     if (msg.sender == owner) _;\n  //   }\n  //   function setCompleted(uint completed) public restricted {\n  //     last_completed_migration = completed;\n  //   }\n  //   function upgrade(address new_address) public restricted {\n  //     Migrations upgraded = Migrations(new_address);\n  //     upgraded.setCompleted(last_completed_migration);\n  //   }\n  // }\n  // )\n  ;\n});","map":{"version":3,"sources":["/Users/chris/Documents/BlockchainProjects/hackathon/auditorFrontEnd/sampleContract2.js"],"names":[],"mappings":"AACA,gBAAe,YAAI;AACjB,SAEF,WAFE,CAGF;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAxBE;AA6BD,CA9BD","sourcesContent":["\nexport default ()=>{\n  return(\n\n\" Hello hi\"\n//   contract Migrations {\n//   address public owner;\n//   uint public last_completed_migration;\n\n//   constructor() public {\n//     owner = msg.sender;\n//   }\n\n//   modifier restricted() {\n//     if (msg.sender == owner) _;\n//   }\n\n//   function setCompleted(uint completed) public restricted {\n//     last_completed_migration = completed;\n//   }\n\n//   function upgrade(address new_address) public restricted {\n//     Migrations upgraded = Migrations(new_address);\n//     upgraded.setCompleted(last_completed_migration);\n//   }\n// }\n// )\n\n\n)\n\n}"]},"metadata":{},"sourceType":"module"}