{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/chris/Documents/BlockchainProjects/hackathon/auditorFrontEnd/pages/auditor/Auditor.js\";\nimport React from 'react';\nimport { List, Button } from 'semantic-ui-react';\nvar x;\n\nfunction runRegexLogic(dataArray) {\n  var searchFunction = 'function'; // we are looking for a line, contains, key word 'user1' in the file\n\n  var searchExternalCall = '.call()';\n  var dangerousCalls1 = '.call.value()';\n  var searchCurlyBrace = '()';\n  var lastIndex = -1; // let say, we have not found the keyword\n\n  var actionLines = new Array();\n  var laws = 0;\n  var EIPE20Check = 0;\n\n  for (var index = 0; index < dataArray.length; index++) {\n    //Store action Lines\n    // Audit payable transaction restrictions\n    if (dataArray[index].includes(searchFunction) && dataArray[index].includes('(') || dataArray[index].includes('contract') && dataArray[index].includes('{') || dataArray[index].includes('constructor') && dataArray[index].includes('(')) {\n      //find function calls\n      actionLines.push(index);\n    }\n\n    ;\n    return dataArray[0];\n  }\n}\n\nvar audit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(audit, _React$Component);\n\n  function audit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, audit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(audit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"runtest\", function () {\n      var contractCode = _this.props.contractCode;\n      var dataArray = contractCode.split(\"\\n\");\n      return runRegexLogic(dataArray);\n    });\n\n    return _this;\n  }\n\n  _createClass(audit, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(List, {\n        divided: true,\n        relaxed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.runtest), React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(List.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(List.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.runtest()), React.createElement(List.Description, {\n        as: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Updated 10 mins ago\"))), React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(List.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(List.Header, {\n        as: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Semantic-Org/Semantic-UI-Docs\"), React.createElement(List.Description, {\n        as: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Updated 22 mins ago\"))));\n    }\n  }]);\n\n  return audit;\n}(React.Component);\n\nexport default audit;","map":{"version":3,"sources":["/Users/chris/Documents/BlockchainProjects/hackathon/auditorFrontEnd/pages/auditor/Auditor.js"],"names":["React","List","Button","x","runRegexLogic","dataArray","searchFunction","searchExternalCall","dangerousCalls1","searchCurlyBrace","lastIndex","actionLines","Array","laws","EIPE20Check","index","length","includes","push","audit","contractCode","props","split","runtest","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,mBAA3B;AAEA,IAAIC,CAAJ;;AAEA,SAASC,aAAT,CAAuBC,SAAvB,EAAiC;AACzB,MAAKC,cAAc,GAAE,UAArB,CADyB,CACQ;;AACjC,MAAIC,kBAAkB,GAAG,SAAzB;AACA,MAAIC,eAAe,GAAG,eAAtB;AACA,MAAIC,gBAAgB,GAAG,IAAvB;AACA,MAAIC,SAAS,GAAG,CAAC,CAAjB,CALyB,CAKL;;AACpB,MAAIC,WAAW,GAAG,IAAIC,KAAJ,EAAlB;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,WAAW,GAAG,CAAlB;;AAGA,OAAK,IAAIC,KAAK,GAAC,CAAf,EAAkBA,KAAK,GAACV,SAAS,CAACW,MAAlC,EAA0CD,KAAK,EAA/C,EAAmD;AAE/C;AACA;AACA,QAAKV,SAAS,CAACU,KAAD,CAAT,CAAiBE,QAAjB,CAA0BX,cAA1B,KAA6CD,SAAS,CAACU,KAAD,CAAT,CAAiBE,QAAjB,CAA0B,GAA1B,CAA9C,IACHZ,SAAS,CAACU,KAAD,CAAT,CAAiBE,QAAjB,CAA0B,UAA1B,KAAyCZ,SAAS,CAACU,KAAD,CAAT,CAAiBE,QAAjB,CAA0B,GAA1B,CADtC,IAEHZ,SAAS,CAACU,KAAD,CAAT,CAAiBE,QAAjB,CAA0B,aAA1B,KAA4CZ,SAAS,CAACU,KAAD,CAAT,CAAiBE,QAAjB,CAA0B,GAA1B,CAF7C,EAE8E;AAAE;AAC5EN,MAAAA,WAAW,CAACO,IAAZ,CAAiBH,KAAjB;AAEH;;AAAA;AAEF,WAAOV,SAAS,CAAC,CAAD,CAAhB;AAEV;AACA;;IAGKc,K;;;;;;;;;;;;;;;;;;8DAEG,YAAI;AACL,UAAIC,YAAY,GAAG,MAAKC,KAAL,CAAWD,YAA9B;AACA,UAAIf,SAAS,GAAGe,YAAY,CAACE,KAAb,CAAmB,IAAnB,CAAhB;AACA,aAAOlB,aAAa,CAACC,SAAD,CAApB;AACH,K;;;;;;;6BAOW;AACR,aACY,oBAAC,IAAD;AAAM,QAAA,OAAO,MAAb;AAAc,QAAA,OAAO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKkB,OAAX,CAFA,EAIM,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAe,KAAKA,OAAL,EAAf,CADF,EAEE,oBAAC,IAAD,CAAM,WAAN;AAAkB,QAAA,EAAE,EAAC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,CADJ,CAJN,EAWI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEE,oBAAC,IAAD,CAAM,WAAN;AAAkB,QAAA,EAAE,EAAC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,CADF,CAXJ,CADZ;AAsBH;;;;EApCevB,KAAK,CAACwB,S;;AAwC1B,eAAeL,KAAf","sourcesContent":["import React from 'react';\nimport {List, Button} from 'semantic-ui-react';\n\nlet x;\n\nfunction runRegexLogic(dataArray){\n        let  searchFunction= 'function'; // we are looking for a line, contains, key word 'user1' in the file\n        let searchExternalCall = '.call()';\n        let dangerousCalls1 = '.call.value()';\n        let searchCurlyBrace = '()';\n        let lastIndex = -1; // let say, we have not found the keyword\n        let actionLines = new Array();\n        let laws = 0;\n        let EIPE20Check = 0;\n\n\n        for (let index=0; index<dataArray.length; index++) {\n\n            //Store action Lines\n            // Audit payable transaction restrictions\n            if ((dataArray[index].includes(searchFunction) && dataArray[index].includes('(')) || \n            (dataArray[index].includes('contract') && dataArray[index].includes('{')) ||\n            (dataArray[index].includes('constructor') && dataArray[index].includes('(')) ){ //find function calls\n                actionLines.push(index);\n\n            };\n\n           return dataArray[0];\n    \n}\n}\n\n\nclass audit extends React.Component{\n\n\truntest=()=>{\n        let contractCode = this.props.contractCode;\n        let dataArray = contractCode.split(\"\\n\");\n        return runRegexLogic(dataArray);\n    }\n\n\n\n\n\n\n        render(){\n        return (\n                    <List divided relaxed>\n\n                    <div>{this.runtest}</div>\n\n                          <List.Item>\n                              <List.Content>\n                                <List.Header >{this.runtest()}</List.Header>\n                                <List.Description as='a'>Updated 10 mins ago</List.Description>\n                              </List.Content>\n                        </List.Item>\n\n                        <List.Item>\n                          <List.Content>\n                            <List.Header as='a'>Semantic-Org/Semantic-UI-Docs</List.Header>\n                            <List.Description as='a'>Updated 22 mins ago</List.Description>\n                          </List.Content>\n                        </List.Item>\n\n\n                    </List>\n            );\n    }\n\n    }\n\nexport default audit;\n\n   \n"]},"metadata":{},"sourceType":"module"}