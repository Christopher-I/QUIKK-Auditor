{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/chris/Documents/BlockchainProjects/hackathon/auditorFrontEnd/pages/components/Sections/landingPageSection1.js\";\nimport React from 'react';\nimport { Segment, Form, TextArea, Progress, Message, Table, Grid } from 'semantic-ui-react';\n\nvar landingPageSection1 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(landingPageSection1, _React$Component);\n\n  function landingPageSection1(props) {\n    var _this;\n\n    _classCallCheck(this, landingPageSection1);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(landingPageSection1).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangesToContract\", function (event) {\n      _this.props.removeErrorMessage();\n\n      _this.props.storeContractCodeToState(event.target.value);\n\n      _this.setState({\n        contract: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"generateNumberedList\", function () {\n      var x = lineNumbers();\n      var list = x.map(function (numbers) {\n        return React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, numbers));\n      }); //update loading bar\n\n      _this.setState({\n        lineNumbers: list\n      });\n    });\n\n    _this.state = {\n      contractCode: '',\n      lineNumbers: ''\n    };\n    return _this;\n  } //when smart contract code changes update the state of the parent\n\n\n  _createClass(landingPageSection1, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateNumberedList();\n    } //generate rendered number list on side of page \n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Input = Form.Input,\n          Group = Form.Group,\n          Field = Form.Field;\n      return React.createElement(Segment, {\n        style: {\n          height: '850px',\n          overflow: 'scroll'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" QUIKK Smart Contract Auditor\"), React.createElement(\"p\", {\n        style: {\n          color: 'grey'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" minimal,fast,open-source smart contract auditor for ethereum\"), React.createElement(Form, {\n        error: !!this.props.errorMessage,\n        success: !!this.props.successMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        percent: this.props.percent,\n        autoSuccess: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Message, {\n        error: true,\n        content: this.props.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Message, {\n        success: true,\n        header: \"Success!\",\n        content: this.props.successMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Table, {\n        color: 'grey',\n        celled: true,\n        compact: true,\n        basic: \"very\",\n        selectable: true,\n        style: {\n          marginTop: '11px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Table.Body, {\n        style: {\n          fontSize: '8px',\n          color: 'grey',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.lineNumbers))), React.createElement(Grid.Column, {\n        width: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(TextArea, {\n        value: this.state.contract,\n        onChange: this.handleChangesToContract,\n        style: {\n          fontSize: '14px',\n          lineHeight: '27px',\n          height: '10000px'\n        },\n        placeholder: \"Paste your smart contract code here...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return landingPageSection1;\n}(React.Component);\n\nexport default landingPageSection1;\n\nvar lineNumbers = function lineNumbers() {\n  var array = [];\n  var i;\n\n  for (i = 1; i < 1001; i++) {\n    array.push(i); //[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25];\n  }\n\n  return array;\n}; // <Field style ={{maxHeight:'680px',minHeight:'680px'}} control={TextArea} label='Full Description' placeholder=\"Paste your smart contract code here...\"\n//   value= {this.state.contract}  onChange={this.handleChangesToContract}  />\n// <TextArea value= {this.state.contract} onChange={this.handleChangesToContract} style ={{maxHeight:'680px',minHeight:'680px'}} placeholder=\"Paste your smart contract code here...\"/>","map":{"version":3,"sources":["/Users/chris/Documents/BlockchainProjects/hackathon/auditorFrontEnd/pages/components/Sections/landingPageSection1.js"],"names":["React","Segment","Form","TextArea","Progress","Message","Table","Grid","landingPageSection1","props","event","removeErrorMessage","storeContractCodeToState","target","value","setState","contract","x","lineNumbers","list","map","numbers","state","contractCode","generateNumberedList","Input","Group","Field","height","overflow","color","errorMessage","successMessage","percent","marginTop","fontSize","textAlign","handleChangesToContract","lineHeight","Component","array","i","push"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,QAAjC,EAA0CC,OAA1C,EAAkDC,KAAlD,EAAwDC,IAAxD,QAAmE,mBAAnE;;IAGMC,mB;;;;;AAEN,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6FAAMA,KAAN;;AADe,8EAUM,UAACC,KAAD,EAAS;AAChC,YAAKD,KAAL,CAAWE,kBAAX;;AACA,YAAKF,KAAL,CAAWG,wBAAX,CAAoCF,KAAK,CAACG,MAAN,CAAaC,KAAjD;;AACA,YAAKC,QAAL,CAAc;AACbC,QAAAA,QAAQ,EAACN,KAAK,CAACG,MAAN,CAAaC;AADT,OAAd;AAGA,KAhBiB;;AAAA,2EAuBG,YAAI;AACxB,UAAIG,CAAC,GAAGC,WAAW,EAAnB;AAED,UAAIC,IAAI,GAAGF,CAAC,CAACG,GAAF,CAAM,UAAAC,OAAO,EAAI;AACjB,eACC,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACD,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,OADH,CADC,CADD;AAOH,OARG,CAAX,CAHyB,CAapB;;AACE,YAAKN,QAAL,CAAc;AAChBG,QAAAA,WAAW,EAAEC;AADG,OAAd;AAKN,KA1CiB;;AAElB,UAAKG,KAAL,GAAa;AACZC,MAAAA,YAAY,EAAC,EADD;AAEZL,MAAAA,WAAW,EAAC;AAFA,KAAb;AAFkB;AAMlB,G,CAGD;;;;;wCASoB;AAClB,WAAKM,oBAAL;AACA,K,CAED;;;;6BAwBQ;AAAA,UACDC,KADC,GACqBvB,IADrB,CACDuB,KADC;AAAA,UACMC,KADN,GACqBxB,IADrB,CACMwB,KADN;AAAA,UACYC,KADZ,GACqBzB,IADrB,CACYyB,KADZ;AAER,aACC,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAI;AAACC,UAAAA,MAAM,EAAC,OAAR;AAAgBC,UAAAA,QAAQ,EAAE;AAA1B,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADD,EAEE;AAAG,QAAA,KAAK,EAAG;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAG,CAAC,CAAC,KAAKrB,KAAL,CAAWsB,YAA3B;AAAyC,QAAA,OAAO,EAAE,CAAC,CAAC,KAAKtB,KAAL,CAAWuB,cAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWwB,OAA9B;AAAuC,QAAA,WAAW,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADC,EAED,oBAAC,OAAD;AAAS,QAAA,KAAK,MAAd;AAAe,QAAA,OAAO,EAAI,KAAKxB,KAAL,CAAWsB,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFC,EAGD,oBAAC,OAAD;AAAS,QAAA,OAAO,MAAhB;AAAiB,QAAA,MAAM,EAAG,UAA1B;AAAqC,QAAA,OAAO,EAAI,KAAKtB,KAAL,CAAWuB,cAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHC,EAMD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,MAAd;AAAsB,QAAA,MAAM,MAA5B;AAA6B,QAAA,OAAO,MAApC;AAAqC,QAAA,KAAK,EAAE,MAA5C;AAAmD,QAAA,UAAU,MAA7D;AAA8D,QAAA,KAAK,EAAE;AAACE,UAAAA,SAAS,EAAC;AAAX,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,KAAD,CAAO,IAAP;AAAY,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAC,KAAV;AAAgBL,UAAAA,KAAK,EAAE,MAAvB;AAA8BM,UAAAA,SAAS,EAAC;AAAxC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKd,KAAL,CAAWJ,WADZ,CAFF,CADH,CADA,EAYA,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAG,KAAKI,KAAL,CAAWN,QAA7B;AAAuC,QAAA,QAAQ,EAAE,KAAKqB,uBAAtD;AAA+E,QAAA,KAAK,EAAG;AAACF,UAAAA,QAAQ,EAAC,MAAV;AAAiBG,UAAAA,UAAU,EAAC,MAA5B;AAAmCV,UAAAA,MAAM,EAAC;AAA1C,SAAvF;AAA6I,QAAA,WAAW,EAAC,wCAAzJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAZA,CADA,CANC,CAHF,CADD;AAiCC;;;;EAnFgC5B,KAAK,CAACuC,S;;AAsFxC,eAAe/B,mBAAf;;AAGG,IAAMU,WAAW,GAAC,SAAZA,WAAY,GAAI;AACrB,MAAIsB,KAAK,GAAC,EAAV;AACA,MAAIC,CAAJ;;AAEA,OAAKA,CAAC,GAAC,CAAP,EAAUA,CAAC,GAAC,IAAZ,EAAkBA,CAAC,EAAnB,EAAsB;AACrBD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX,EADqB,CAEtB;AACA;;AAED,SAAOD,KAAP;AAEC,CAXD,C,CAaC;AACA;AAEA","sourcesContent":["import React from 'react';\nimport {Segment, Form, TextArea, Progress,Message,Table,Grid} from 'semantic-ui-react';\n\n\nclass landingPageSection1 extends React.Component{\n\nconstructor(props) {\n    super(props);\n\tthis.state = {\n\t\tcontractCode:'',\n\t\tlineNumbers:''\n\t}\n}\n\n\n//when smart contract code changes update the state of the parent\n\thandleChangesToContract=(event)=>{\n\t\tthis.props.removeErrorMessage(); \n\t\tthis.props.storeContractCodeToState(event.target.value);\n\t\tthis.setState({\n\t\t\tcontract:event.target.value\n\t\t});\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.generateNumberedList();\n\t}\n\n\t//generate rendered number list on side of page \n\tgenerateNumberedList=()=>{\n\t\tlet x = lineNumbers();\n\n\tlet list = x.map(numbers => {        \n            return (\n            \t<Table.Row>\n\t\t\t\t        <Table.Cell >\n\t\t\t\t          {numbers}\n\t\t\t\t        </Table.Cell>\n\t\t\t\t </Table.Row>\n            );   \n        });\n\n\t     //update loading bar\n        this.setState({\n\t\t  \t\tlineNumbers :list\n\n\t\t  \t})\n\n\t}\n\n\n\n\trender(){\n\tconst {Input, Group,Field} = Form;\n\treturn (\n\t\t<Segment style = {{height:'850px',overflow: 'scroll'}}>\n\t\t\t<h1> QUIKK Smart Contract Auditor</h1> \n\t\t\t <p style ={{color:'grey'}}> minimal,fast,open-source smart contract auditor for ethereum</p>\n\t\t\t <Form error= {!!this.props.errorMessage} success={!!this.props.successMessage}>\n\t\t\t<Progress percent={this.props.percent} autoSuccess />\n\t\t\t<Message error content = {this.props.errorMessage}/>\n\t\t\t<Message success header = \"Success!\" content = {this.props.successMessage}/>\n\n\n\t\t\t<Grid>\n\t\t\t<Grid.Row >\n\t\t\t<Grid.Column width={1}>\n\t\t\t\t  <Table color={'grey'} celled compact basic ='very' selectable style={{marginTop:'11px'}}>\n\n\t\t\t\t    <Table.Body style={{fontSize:'8px',color :'grey',textAlign:'center'}}>\n\t\t\t\t    {this.state.lineNumbers}\n\n\t\t\t\t      </Table.Body>\n  \t\t\t</Table>\n\n\t\t\t</Grid.Column>\n\n\t\t\t<Grid.Column width={15}>\n\t\t\t<TextArea value= {this.state.contract} onChange={this.handleChangesToContract} style ={{fontSize:'14px',lineHeight:'27px',height:'10000px'}} placeholder=\"Paste your smart contract code here...\"/>\n\t\t\t </Grid.Column>\n\n\t\t\t </Grid.Row>\n\t\t\t </Grid>\n\n\t\t\t </Form>\n\t\t </Segment>\n\t\t)\n\t}\n}\n\nexport default landingPageSection1;\n\n\n\t\t\tconst lineNumbers=()=>{\n\t\t\t\tlet array=[];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i=1; i<1001; i++){\n\t\t\t\t\tarray.push(i);\n\t\t\t\t//[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25];\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t\t} \n\n\t\t\t // <Field style ={{maxHeight:'680px',minHeight:'680px'}} control={TextArea} label='Full Description' placeholder=\"Paste your smart contract code here...\"\n    //   value= {this.state.contract}  onChange={this.handleChangesToContract}  />\n\n    // <TextArea value= {this.state.contract} onChange={this.handleChangesToContract} style ={{maxHeight:'680px',minHeight:'680px'}} placeholder=\"Paste your smart contract code here...\"/>"]},"metadata":{},"sourceType":"module"}