{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/chris/Documents/BlockchainProjects/hackathon/auditorFrontEnd/pages/auditor/Auditor.js\";\nimport React from 'react';\nimport { List, Button } from 'semantic-ui-react';\nvar actionLines = new Array();\nvar warn;\nvar warnings = [];\n\nvar audit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(audit, _React$Component);\n\n  function audit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, audit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(audit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"runtest\", function () {\n      var contractCode = _this.props.contractCode;\n      var dataArray = contractCode.split(\"\\n\");\n      return runRegexLogic(dataArray);\n    });\n\n    return _this;\n  }\n\n  _createClass(audit, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(List, {\n        divided: true,\n        relaxed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.runtest), React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(List.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(List.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.runtest()), React.createElement(List.Description, {\n        as: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Updated 10 mins ago\"))), React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(List.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(List.Header, {\n        as: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Semantic-Org/Semantic-UI-Docs\"), React.createElement(List.Description, {\n        as: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Updated 22 mins ago\"))));\n    }\n  }]);\n\n  return audit;\n}(React.Component);\n\nexport default audit;\n\nfunction runRegexLogic(dataArray) {\n  var searchFunction = 'function'; // we are looking for a line, contains, key word 'user1' in the file\n\n  var searchExternalCall = '.call()';\n  var dangerousCalls1 = '.call.value()';\n  var searchCurlyBrace = '()';\n  var lastIndex = -1; // let say, we have not found the keyword\n\n  var laws = 0;\n  var EIPE20Check = 0;\n\n  for (var index = 0; index < dataArray.length; index++) {\n    //Store action Lines\n    // Audit payable transaction restrictions\n    if (dataArray[index].includes(searchFunction) && dataArray[index].includes('(') || dataArray[index].includes('contract') && dataArray[index].includes('{') || dataArray[index].includes('constructor') && dataArray[index].includes('(')) {\n      //find function calls\n      actionLines.push(index);\n    }\n\n    ; // Audit payable transaction restrictions\n\n    if (dataArray[index].includes(searchFunction) && dataArray[index].includes('(')) {\n      //find function calls\n      if (dataArray[index].includes('payable')) {\n        //check if contract is payable\n        if (!dataArray[index].includes('internal') && !dataArray[index].includes('restricted')) {\n          //check if contract is payable \n          warn = \"Use caution when making external calls on payable function, ensure you mark trusted contracts/address -\" + \" line \" + (index + 1);\n          warnings.push(warn);\n        }\n      }\n    } //Audting state changes after external calls\n\n\n    if (dataArray[index].includes(searchExternalCall)) {\n      //find external calls\n      warn = \"Avoid state changes after external calls -\" + \" line \" + (index + 1);\n      warnings.push(warn);\n    } //Be aware of the tradeoffs between send(), transfer(), and call.value()()\n\n\n    if (dataArray[index].includes(dangerousCalls1)) {\n      //find external calls\n      warn = \"Be aware that using '.call.value()', it is susceptible to re-entry attacks, if possible use send() or transfer(). Also do not forget to set your new account balance before the transfer \" + (index + 1);\n      warnings.push(warn);\n    } //Handle errors in external calls\n\n\n    if (dataArray[index].includes('.callcode(') || dataArray[index].includes('.call(') || dataArray[index].includes('call(') || dataArray[index].includes('.delegatecall(') || dataArray[index].includes('.send(')) {\n      //find external calls\n      if (!dataArray[index].includes('if')) {\n        warn = \"Handle errors in external calls warning: make sure to handle the possibility that the call will fail, by checking the return value.  \" + (index + 1);\n        warnings.push(warn);\n      }\n    } // Favor pull over push for external calls\n\n\n    if (dataArray[index].includes(searchFunction) && dataArray[index].includes('(')) {\n      //find function calls\n      if (dataArray[index].includes('payable')) {\n        //check if contract is payable\n        if (dataArray[index].includes('internal') || !dataArray[index].includes('external')) {\n          //check if contract is payable \n          warn = \"Favor pull over push for external calls.External/Internal Calls can fail accidentally or deliberately. To minimize the damage caused by such failures, it is often better to set up manaul transfers rather than automate them. This is especially relevant for payments, where it is better to let users withdraw funds rather than push funds to them automatically. (This also reduces the chance of problems with the gas limit.) -\" + \" line \" + (index + 1);\n          warnings.push(warn);\n        }\n      }\n    }\n\n    ; //Don't delegatecall to untrusted code\n\n    if (dataArray[index].includes('.delegatecall') && dataArray[index].includes('(')) {\n      //find external calls\n      warn = \"Ensure that the address being used in this delegate call is a trusted address and cannot be changed or supplied by a user, as the result can alter the state of your contract \" + (index + 1);\n      warnings.push(warn);\n    } //Audit function visibility \n\n\n    if (dataArray[index].includes(searchFunction) && dataArray[index].includes('(') && !dataArray[index].includes('internal') && !dataArray[index].includes('external') && !dataArray[index].includes('private') && !dataArray[index].includes('public')) {\n      warn = \"Explicitly label the visibility of functions and state variables. Functions can be specified as being external, public, internal or private. \" + (index + 1);\n      warnings.push(warn);\n    } //Lock Pragma on specific solidity version\n\n\n    if (dataArray[index].includes('pragma solidity') && (dataArray[index].includes('>') || dataArray[index].includes('^') || dataArray[index].includes('<'))) {\n      //find external calls\n      warn = \"Lock pragmas to specific compiler version. Locking the pragma helps ensure that contracts do not accidentally get deployed using, for example, the latest compiler which may have higher risks of undiscovered bugs -\" + \" line \" + (index + 1);\n      warnings.push(warn);\n    } //Avoid using tx.origin\n\n\n    if (dataArray[index].includes('tx.origin')) {\n      //find external calls\n      warn = \"Avoid using tx.origin as it is unsafe, we recommend you should use msg.sender for authorization .-\" + \" line \" + (index + 1);\n      warnings.push(warn);\n    }\n\n    if (dataArray[index].includes('block.timestamp')) {\n      //find external calls\n      warn = \"Be aware that the timestamp of the block maybe inaccurate as it can be manipulated by a miner and other factors.-\" + \" line \" + (index + 1);\n      warnings.push(warn);\n    }\n\n    if (dataArray[index].includes('block.number')) {\n      //find external calls\n      warn = \"It is possible to estimate a time delta using the block.number property and average block time, however this is not future proof as block times may change.-\" + \" line \" + (index + 1);\n      warnings.push(warn);\n    } //Use interface type instead of the address for type safety\n\n\n    if (dataArray[index].includes(searchFunction) && dataArray[index].includes('(') && dataArray[index].includes('address')) {\n      //find function calls\n      warn = \"When a function takes a contract address as an argument, it is better to pass an interface or contract type rather than raw address. If the function is called elsewhere within the source code, the compiler it will provide additional type safety guarantees -\" + \" line \" + (index + 1);\n      warnings.push(warn);\n    }\n\n    if (dataArray[index].includes('extcodesize')) {\n      //find external calls\n      warn = \"Avoid using extcodesize to check for Externally Owned Accounts.\" + \" line \" + (index + 1);\n      warnings.push(warn);\n    }\n\n    if (dataArray[index].includes('EIP-20') || dataArray[index].includes('approve(')) {\n      EIPE20Check++;\n\n      if (EIPE20Check >= 2) {\n        warn = \"The EIP-20 token's approve() function creates the potential for an approved spender to spend more than the intended amount. A front running attack can be used, enabling an approved spender to call transferFrom() both before and after the call to approve() is processed.\" + \" line \" + (index + 1);\n        warnings.push(warn);\n      }\n    } //Prevent transferring tokens to the 0x0 address\n\n\n    if (dataArray[index].includes(searchFunction) && dataArray[index].includes('(') && (dataArray[index].includes('transferFrom') || dataArray[index].includes('transfer'))) {\n      //find function calls\n      warn = \"Prevent transferring tokens to the 0x0 address and prevent transferring tokens to the same contract address. -\" + \"After your function declaration, you could the modifier:\" + \"modifier validDestination( address to ) {\" + \"require(to != address(0x0));\" + \"require(to != address(this) );\" + \"};\" + \" line \" + (index + 1);\n      warnings.push(warn);\n    } //Safemath preventions\n\n\n    if (dataArray[index].includes('uint256') && dataArray[index].includes('=') && (dataArray[index].includes('*') || dataArray[index].includes('-') || dataArray[index].includes('+') || dataArray[index].includes('/'))) {\n      //find external calls\n      warn = \"Be aware that doing math functions on uint256 can cause overflows and underflows. We recommend you implement OpenZeppelin SafeMath. line \" + (index + 1);\n      warnings.push(warn);\n    } //Prevent transferring tokens to the 0x0 address\n\n\n    if (dataArray[index].includes(searchFunction) && dataArray[index].includes('(') && (dataArray[index].includes('transferFrom') || dataArray[index].includes('transfer') || dataArray[index].includes('withdraw')) && !dataArray[index].includes('onlyPayloadSize')) {\n      //find function calls\n      warn = \"Prevent Short address attack by by introducing onlyPayloadSize modifier. line \" + (index + 1);\n      warnings.push(warn);\n    }\n  }\n\n  return actionLines.length;\n}","map":{"version":3,"sources":["/Users/chris/Documents/BlockchainProjects/hackathon/auditorFrontEnd/pages/auditor/Auditor.js"],"names":["React","List","Button","actionLines","Array","warn","warnings","audit","contractCode","props","dataArray","split","runRegexLogic","runtest","Component","searchFunction","searchExternalCall","dangerousCalls1","searchCurlyBrace","lastIndex","laws","EIPE20Check","index","length","includes","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {List, Button} from 'semantic-ui-react';\n\nlet actionLines = new Array();\nlet warn;\nlet warnings=[];\n\n\nclass audit extends React.Component{\n\n\truntest=()=>{\n        let contractCode = this.props.contractCode;\n        let dataArray = contractCode.split(\"\\n\");\n        return runRegexLogic(dataArray);\n    }\n\n\n\n    render(){\n        return (\n                    <List divided relaxed>\n\n                    <div>{this.runtest}</div>\n\n                          <List.Item>\n                              <List.Content>\n                                <List.Header >{this.runtest()}</List.Header>\n                                <List.Description as='a'>Updated 10 mins ago</List.Description>\n                              </List.Content>\n                        </List.Item>\n\n                        <List.Item>\n                          <List.Content>\n                            <List.Header as='a'>Semantic-Org/Semantic-UI-Docs</List.Header>\n                            <List.Description as='a'>Updated 22 mins ago</List.Description>\n                          </List.Content>\n                        </List.Item>\n\n\n                    </List>\n            );\n    }\n\n    }\n\nexport default audit;\n\n\nfunction runRegexLogic(dataArray){\n        let  searchFunction= 'function'; // we are looking for a line, contains, key word 'user1' in the file\n        let searchExternalCall = '.call()';\n        let dangerousCalls1 = '.call.value()';\n        let searchCurlyBrace = '()';\n        let lastIndex = -1; // let say, we have not found the keyword\n\n        let laws = 0;\n        let EIPE20Check = 0;\n\n\n for (let index=0; index<dataArray.length; index++) {\n\n //Store action Lines\n                // Audit payable transaction restrictions\n        if ((dataArray[index].includes(searchFunction) && dataArray[index].includes('(')) || \n        (dataArray[index].includes('contract') && dataArray[index].includes('{')) ||\n        (dataArray[index].includes('constructor') && dataArray[index].includes('(')) ){ //find function calls\n            actionLines.push(index);\n\n        };\n\n        // Audit payable transaction restrictions\n        if ((dataArray[index].includes(searchFunction)) && dataArray[index].includes('(')) { //find function calls\n            if (dataArray[index].includes('payable')){ //check if contract is payable\n                if (!dataArray[index].includes('internal') && !dataArray[index].includes('restricted')){ //check if contract is payable \n\n                warn =\"Use caution when making external calls on payable function, ensure you mark trusted contracts/address -\" + \" line \" + (index+1);\n                warnings.push(warn);\n            }\n        }\n        }\n    \n    //Audting state changes after external calls\n        if (dataArray[index].includes(searchExternalCall)) { //find external calls\n            warn =\"Avoid state changes after external calls -\" + \" line \" + (index+1);       \n                warnings.push(warn);\n                \n        }\n    \n        //Be aware of the tradeoffs between send(), transfer(), and call.value()()\n        if (dataArray[index].includes(dangerousCalls1)) { //find external calls\n            warn =\"Be aware that using '.call.value()', it is susceptible to re-entry attacks, if possible use send() or transfer(). Also do not forget to set your new account balance before the transfer \" + (index+1);       \n                warnings.push(warn);\n                \n        }\n\n        //Handle errors in external calls\n                if (dataArray[index].includes('.callcode(') || dataArray[index].includes('.call(')||dataArray[index].includes('call(') || dataArray[index].includes('.delegatecall(') || dataArray[index].includes('.send(')) {\n                 //find external calls\n                 if (!dataArray[index].includes('if')){\n            warn =\"Handle errors in external calls warning: make sure to handle the possibility that the call will fail, by checking the return value.  \" + (index+1);       \n                warnings.push(warn);\n            }              \n        }\n\n// Favor pull over push for external calls\n        if (dataArray[index].includes(searchFunction) && dataArray[index].includes('(')) { //find function calls\n            if (dataArray[index].includes('payable')){ //check if contract is payable\n                if ((dataArray[index].includes('internal')) || (!dataArray[index].includes('external'))) { //check if contract is payable \n\n                warn =\"Favor pull over push for external calls.External/Internal Calls can fail accidentally or deliberately. To minimize the damage caused by such failures, it is often better to set up manaul transfers rather than automate them. This is especially relevant for payments, where it is better to let users withdraw funds rather than push funds to them automatically. (This also reduces the chance of problems with the gas limit.) -\" + \" line \" + (index+1);\n                warnings.push(warn);\n            }\n        }\n        };\n\n\n        //Don't delegatecall to untrusted code\n        if (((dataArray[index].includes('.delegatecall')) && (dataArray[index].includes('(')))) { //find external calls\n            warn =\"Ensure that the address being used in this delegate call is a trusted address and cannot be changed or supplied by a user, as the result can alter the state of your contract \" + (index+1);       \n                warnings.push(warn);\n                \n        }\n\n        //Audit function visibility \n        if ((dataArray[index].includes(searchFunction)) && dataArray[index].includes('(') && (!dataArray[index].includes('internal')) &&\n        ((!dataArray[index].includes('external'))) && ((!dataArray[index].includes('private'))) && ((!dataArray[index].includes('public'))) ) {\n            warn =\"Explicitly label the visibility of functions and state variables. Functions can be specified as being external, public, internal or private. \" + (index+1);\n            warnings.push(warn); \n\n        }\n\n            //Lock Pragma on specific solidity version\n        if ((dataArray[index].includes('pragma solidity')) && ((dataArray[index].includes('>')) || (dataArray[index].includes('^')) || (dataArray[index].includes('<'))) ) { //find external calls\n            warn =\"Lock pragmas to specific compiler version. Locking the pragma helps ensure that contracts do not accidentally get deployed using, for example, the latest compiler which may have higher risks of undiscovered bugs -\" + \" line \" + (index+1);       \n                warnings.push(warn);\n                \n        }\n\n            //Avoid using tx.origin\n        if (dataArray[index].includes('tx.origin')) { //find external calls\n            warn =\"Avoid using tx.origin as it is unsafe, we recommend you should use msg.sender for authorization .-\" + \" line \" + (index+1);       \n                warnings.push(warn);\n                \n        }\n\n         if (dataArray[index].includes('block.timestamp')) { //find external calls\n            warn =\"Be aware that the timestamp of the block maybe inaccurate as it can be manipulated by a miner and other factors.-\" + \" line \" + (index+1);       \n                warnings.push(warn);\n                \n        }\n\n        if (dataArray[index].includes('block.number')) { //find external calls\n            warn =\"It is possible to estimate a time delta using the block.number property and average block time, however this is not future proof as block times may change.-\" + \" line \" + (index+1);       \n                warnings.push(warn);\n                \n        }\n\n        //Use interface type instead of the address for type safety\n        if ((dataArray[index].includes(searchFunction)) && dataArray[index].includes('(') && dataArray[index].includes('address') ) { //find function calls\n                warn =\"When a function takes a contract address as an argument, it is better to pass an interface or contract type rather than raw address. If the function is called elsewhere within the source code, the compiler it will provide additional type safety guarantees -\" + \" line \" + (index+1);       \n                warnings.push(warn);\n\n        }\n\n        if (dataArray[index].includes('extcodesize')) { //find external calls\n            warn =\"Avoid using extcodesize to check for Externally Owned Accounts.\" + \" line \" + (index+1);       \n                warnings.push(warn);\n                \n        }\n\n        if ((dataArray[index].includes('EIP-20')) || (dataArray[index].includes('approve(')) ){\n             EIPE20Check ++;\n\n            if (EIPE20Check >= 2){\n                warn =\"The EIP-20 token's approve() function creates the potential for an approved spender to spend more than the intended amount. A front running attack can be used, enabling an approved spender to call transferFrom() both before and after the call to approve() is processed.\" + \" line \" + (index+1);       \n                warnings.push(warn);\n            }\n        }\n\n\n        //Prevent transferring tokens to the 0x0 address\n        if ((dataArray[index].includes(searchFunction)) && dataArray[index].includes('(') && (dataArray[index].includes('transferFrom') || dataArray[index].includes('transfer')) ) { //find function calls\n                warn =\"Prevent transferring tokens to the 0x0 address and prevent transferring tokens to the same contract address. -\" + \n                \"After your function declaration, you could the modifier:\" +\n                \"modifier validDestination( address to ) {\" +\n                \"require(to != address(0x0));\" +\n                \"require(to != address(this) );\" +\n                \"};\" +\n                \" line \" + (index+1);       \n                warnings.push(warn);\n        }\n\n\n        //Safemath preventions\n        if ((dataArray[index].includes('uint256')) && (dataArray[index].includes('=')) && ((dataArray[index].includes('*')) || \n        (dataArray[index].includes('-')) || (dataArray[index].includes('+')) || (dataArray[index].includes('/')) ) ) { //find external calls\n            warn =\"Be aware that doing math functions on uint256 can cause overflows and underflows. We recommend you implement OpenZeppelin SafeMath. line \" + (index+1);       \n                warnings.push(warn);\n                \n        }\n\n\n\n        //Prevent transferring tokens to the 0x0 address\n        if ((dataArray[index].includes(searchFunction)) && (dataArray[index].includes('(')) && ((dataArray[index].includes('transferFrom')) || \n        (dataArray[index].includes('transfer')) || (dataArray[index].includes('withdraw'))) && (!dataArray[index].includes('onlyPayloadSize')))  { //find function calls\n                warn =\"Prevent Short address attack by by introducing onlyPayloadSize modifier. line \" + (index+1);       \n                warnings.push(warn);\n        }\n\n\n}\n\n           return actionLines.length;\n}\n\n\n   \n"]},"metadata":{},"sourceType":"module"}